{
  "openapi": "3.0.1",
  "info": {
    "title": "My Task API",
    "description": "An ASP.NET Core Web API for managing tasks with JWT Authentication",
    "version": "v1"
  },
  "paths": {
    "/api/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login to the system",
        "description": "Return token JWT when login success.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Incorrect information or account was banned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new account",
        "description": "Create a new account with username, email and password.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Register success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data register.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "409": {
            "description": "Existing username or email.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/auth/forgot-password": {
      "put": {
        "tags": [
          "Auth"
        ],
        "summary": "Forgot password",
        "description": "Change password with username and new password.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Change password success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Account does not exist or account was banned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "404": {
            "description": "Account not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/odata/$metadata": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "operationId": "odata/$metadata",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              }
            }
          }
        }
      }
    },
    "/odata": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "operationId": "odata/",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              }
            }
          }
        }
      }
    },
    "/odata/task-item/{userId}": {
      "get": {
        "tags": [
          "TaskItem"
        ],
        "summary": "Get all task items for a user",
        "description": "Retrieve a list of all task items associated with a specific user.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of task items retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskItemResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/odata/task-item/id={id}": {
      "get": {
        "tags": [
          "TaskItem"
        ],
        "summary": "Get task item by ID",
        "description": "Retrieve a task item by its unique ID. Authorization required.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task item found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskItemResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Task item not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/odata/task-item/create": {
      "post": {
        "tags": [
          "TaskItem"
        ],
        "summary": "Create a new task item",
        "description": "Create a new task item with the provided details. Authorization required.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskItemCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task item created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid task item data"
          },
          "401": {
            "description": "Unauthorized access"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/odata/task-item/update/id={id}": {
      "put": {
        "tags": [
          "TaskItem"
        ],
        "summary": "Update an existing task item",
        "description": "Update the details of an existing task item. Authorization required.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskItemUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task item updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid task item data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/odata/task-item/delete/id={id}": {
      "delete": {
        "tags": [
          "TaskItem"
        ],
        "summary": "Delete a task item",
        "description": "Delete a task item by its ID. Authorization required.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task item deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid task item ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/odata/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all users",
        "description": "Retrieve a list of all users in the system. Admin access required.",
        "responses": {
          "200": {
            "description": "List of users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/odata/user/find/id={id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user by ID",
        "description": "Retrieve a user by their unique ID. Authorization required.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "500": {
            "description": "Internal server error"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/odata/user/find/username={username}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user by username",
        "description": "Retrieve a user by their unique username. No authorization required.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/odata/user/find/email={email}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user by email",
        "description": "Retrieve a user by their unique email address. No authorization required.",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/odata/user/update/id={id}": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update user information",
        "description": "Update user details such as name, email, etc. Authorization required.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data or ID mismatch",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/odata/user/change-pass/id={id}": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Change user password",
        "description": "Change the password for a user. Authorization required.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data or ID mismatch",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/odata/user/delete/id={id}": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete a user",
        "description": "Delete a user by their unique ID. Authorization required.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthResponse": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChangePassword": {
        "required": [
          "currentPassword",
          "id",
          "newPassword"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "currentPassword": {
            "minLength": 1,
            "type": "string"
          },
          "newPassword": {
            "maxLength": 32,
            "minLength": 8,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "EdmContainerElementKind": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "EdmExpressionKind": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25
        ],
        "type": "integer",
        "format": "int32"
      },
      "EdmSchemaElementKind": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "EdmTypeKind": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9
        ],
        "type": "integer",
        "format": "int32"
      },
      "ForgotPassword": {
        "required": [
          "newPassword",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "minLength": 1,
            "type": "string"
          },
          "newPassword": {
            "maxLength": 32,
            "minLength": 8,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "IEdmDirectValueAnnotationsManager": {
        "type": "object",
        "additionalProperties": false
      },
      "IEdmEntityContainer": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "schemaElementKind": {
            "$ref": "#/components/schemas/EdmSchemaElementKind"
          },
          "namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "elements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IEdmEntityContainerElement"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IEdmEntityContainerElement": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "containerElementKind": {
            "$ref": "#/components/schemas/EdmContainerElementKind"
          },
          "container": {
            "$ref": "#/components/schemas/IEdmEntityContainer"
          }
        },
        "additionalProperties": false
      },
      "IEdmExpression": {
        "type": "object",
        "properties": {
          "expressionKind": {
            "$ref": "#/components/schemas/EdmExpressionKind"
          }
        },
        "additionalProperties": false
      },
      "IEdmModel": {
        "type": "object",
        "properties": {
          "schemaElements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IEdmSchemaElement"
            },
            "nullable": true,
            "readOnly": true
          },
          "vocabularyAnnotations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IEdmVocabularyAnnotation"
            },
            "nullable": true,
            "readOnly": true
          },
          "referencedModels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IEdmModel"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredNamespaces": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "directValueAnnotationsManager": {
            "$ref": "#/components/schemas/IEdmDirectValueAnnotationsManager"
          },
          "entityContainer": {
            "$ref": "#/components/schemas/IEdmEntityContainer"
          }
        },
        "additionalProperties": false
      },
      "IEdmSchemaElement": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "schemaElementKind": {
            "$ref": "#/components/schemas/EdmSchemaElementKind"
          },
          "namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IEdmTerm": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "schemaElementKind": {
            "$ref": "#/components/schemas/EdmSchemaElementKind"
          },
          "namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "$ref": "#/components/schemas/IEdmTypeReference"
          },
          "appliesTo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "defaultValue": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IEdmType": {
        "type": "object",
        "properties": {
          "typeKind": {
            "$ref": "#/components/schemas/EdmTypeKind"
          }
        },
        "additionalProperties": false
      },
      "IEdmTypeReference": {
        "type": "object",
        "properties": {
          "isNullable": {
            "type": "boolean",
            "readOnly": true
          },
          "definition": {
            "$ref": "#/components/schemas/IEdmType"
          }
        },
        "additionalProperties": false
      },
      "IEdmVocabularyAnnotatable": {
        "type": "object",
        "additionalProperties": false
      },
      "IEdmVocabularyAnnotation": {
        "type": "object",
        "properties": {
          "qualifier": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "term": {
            "$ref": "#/components/schemas/IEdmTerm"
          },
          "target": {
            "$ref": "#/components/schemas/IEdmVocabularyAnnotatable"
          },
          "value": {
            "$ref": "#/components/schemas/IEdmExpression"
          }
        },
        "additionalProperties": false
      },
      "LoginRequest": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ODataEntitySetInfo": {
        "type": "object",
        "properties": {
          "typeAnnotation": {
            "$ref": "#/components/schemas/ODataTypeAnnotation"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ODataFunctionImportInfo": {
        "type": "object",
        "properties": {
          "typeAnnotation": {
            "$ref": "#/components/schemas/ODataTypeAnnotation"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ODataServiceDocument": {
        "type": "object",
        "properties": {
          "typeAnnotation": {
            "$ref": "#/components/schemas/ODataTypeAnnotation"
          },
          "entitySets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ODataEntitySetInfo"
            },
            "nullable": true
          },
          "singletons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ODataSingletonInfo"
            },
            "nullable": true
          },
          "functionImports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ODataFunctionImportInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ODataSingletonInfo": {
        "type": "object",
        "properties": {
          "typeAnnotation": {
            "$ref": "#/components/schemas/ODataTypeAnnotation"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ODataTypeAnnotation": {
        "type": "object",
        "properties": {
          "typeName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "RegisterRequest": {
        "required": [
          "email",
          "firstName",
          "lastName",
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "maxLength": 50,
            "minLength": 6,
            "type": "string"
          },
          "password": {
            "maxLength": 32,
            "minLength": 8,
            "type": "string"
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 2,
            "type": "string"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 2,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Response": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaskItemCreateRequest": {
        "required": [
          "dueDate",
          "priority",
          "startDate",
          "status",
          "title",
          "userId"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 100,
            "minLength": 2,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "minLength": 1,
            "type": "string"
          },
          "priority": {
            "minLength": 1,
            "pattern": "Low|Medium|High",
            "type": "string"
          },
          "status": {
            "minLength": 1,
            "pattern": "ToDo|InProgress|Overdue|Completed",
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "TaskItemResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "user": {
            "$ref": "#/components/schemas/UserResponse"
          },
          "priority": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "createAt": {
            "type": "string",
            "format": "date-time"
          },
          "updateAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "TaskItemUpdateRequest": {
        "required": [
          "dueDate",
          "id",
          "priority",
          "startDate",
          "status",
          "title",
          "userId"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 100,
            "minLength": 2,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "minLength": 1,
            "type": "string"
          },
          "priority": {
            "minLength": 1,
            "pattern": "Low|Medium|High",
            "type": "string"
          },
          "status": {
            "minLength": 1,
            "pattern": "ToDo|InProgress|Overdue|Completed",
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "createAt": {
            "type": "string",
            "format": "date-time"
          },
          "updateAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UserUpdateRequest": {
        "required": [
          "email",
          "firstName",
          "id",
          "lastName",
          "username"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "username": {
            "maxLength": 50,
            "minLength": 6,
            "type": "string"
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 2,
            "type": "string"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 2,
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Enter your JWT Access Token",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}